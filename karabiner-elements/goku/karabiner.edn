{
  :applications {
    :slack_notion ["^com\\.tinyspeck\\.slackmacgap$" "^notion\\.id"]
    :notion ["^notion\\.id"]
    :slack ["^com\\.tinyspeck\\.slackmacgap$"]
    :no_return_apps [
      "^com\\.todesktop\\.230313mzl4w4u92" ;; Cursor
      "^company\\.thebrowser\\.Browser"    ;; Arc
    ]
  }

  :devices {
    :corne [{:vendor_id 7504 :product_id 24926}]
  }
  
  :input-sources {
    :ja {:language "ja"}
  }

  :templates {
    :launch "osascript -e 'tell application \"%s\" to activate'"
  }

  :main [
    {:des "CAPSハイパーキー: Caps_lockを Shift, Command, Control, Option に置換する"
     :rules [
      [:caps_lock [:!CTOleft_shift]]
      [:!!a [:launch "Arc"]]
      [:!!c [:launch "Cursor"]]
      [:!!d [:launch "Dictionaries"]]
      [:!!l [:launch "DeepL"]]
      [:!!f [:launch "Finder"]]
      [:!!n [:launch "Notion"]]
      [:!!o [:launch "Obsidian"]]
      [:!!p [:launch "1Password"]]
      [:!!r [:launch "Reminders"]]
      [:!!s [:launch "Slack"]]
      [:!!w [:launch "Warp"]]
    ]}

    {:des "英かな：左右⌘キーを単独で押したときは英数・かなキーとして扱う"
     :rules [
      [:left_command :left_command   nil {:alone :japanese_eisuu}]
      [:right_command :right_command nil {:alone :japanese_kana}]
    ]}

    {:des "アプリ横断でショートカットキーを統一"
     :rules [
      ;; Slack & Notion
      [:!Cl :!Ck :slack_notion] ;; 検索 ⌘ L -> ⌘ K

      ;; Notion
      [:!CSTc :!CTl :notion]  ;; ブロックリンクコピー ⌘⇧^ C -> ⌘^ L
      [:!CS7  :!CO6 :notion]  ;; 番号付き箇条書き ⌘⇧ 7 -> ⌘⌥ 6
      [:!CS8  :!CO5 :notion]  ;; 箇条書き ⌘⇧ 8 -> ⌘⌥ 5
      [:!CS9  :!CO4 :notion]  ;; チェックリスト ⌘⇧ 9 -> ⌘⌥ 4

      ;; Slack
      [:!Ce :!CSc :slack];; コード ⌘ E -> ⌘⇧ C (Notion's shortcut)
    ]}

    {:des "括弧を自動的に閉じてカーソルを中に移動"
     :rules [
      ;; ^⌥⇧リターンは日本語の確定動作（かわせみで定義必要：「変換と確定」→「全文節確定」、「候補操作」→「候補決定」）
      ;; '"`は半角直接入力設定なので確定不要。
      
      ;; 同時押し（共通）
      [[:comma :period] [:!Scomma :!Speriod :!TOSreturn_or_enter :left_arrow] [:ja]]  ;; ,. → 不等号 <> （日本語）
      [[:comma :period] [:!Scomma :!Speriod                      :left_arrow] [:!ja]] ;; ,. → 不等号 <> （日本語以外）

      ;; 同時押し（ビルドインキーボード用）
      [[:open_bracket :close_bracket]                                         [:open_bracket :close_bracket :!TOSreturn_or_enter :left_arrow]     [:!corne :ja]]  ;; [] → 角括弧 [] （日本語）
      [[:open_bracket :close_bracket]                                         [:open_bracket :close_bracket                      :left_arrow]     [:!corne :!ja]] ;; [] → 角括弧 [] （日本語以外）
      [{:sim [:open_bracket :close_bracket] :modi {:mandatory [:left_shift]}} [:!Sopen_bracket :!Sclose_bracket :!TOSreturn_or_enter :left_arrow] [:!corne :ja]]  ;; {} → 波括弧 {} （日本語）
      [{:sim [:open_bracket :close_bracket] :modi {:mandatory [:left_shift]}} [:!Sopen_bracket :!Sclose_bracket                      :left_arrow] [:!corne :!ja]] ;; {} → 波括弧 {} （日本語以外）
      [[:9 :0]                                                                [:!S9 :!S0 :!TOSreturn_or_enter :left_arrow]                        [:!corne :ja]]  ;; 90 → 丸括弧 () （日本語）
      [[:9 :0]                                                                [:!S9 :!S0                      :left_arrow]                        [:!corne :!ja]] ;; 90 → 丸括弧 () （日本語以外）
      [[:semicolon :quote]                                                    [:quote :quote :left_arrow]                                         [:!corne]] ;; ;' → シングルクォート '' （言語非依存）
      [{:sim [:semicolon :quote] :modi {:mandatory [:left_shift]}}            [:!Squote :!Squote :left_arrow]                                     [:!corne]] ;; :_ → ダブルクォート "" （言語非依存）
      [[:grave_accent_and_tilde :1]                                           [:grave_accent_and_tilde :grave_accent_and_tilde :left_arrow]       [:!corne]] ;; `1 → バッククォート `` （言語非依存）

      ;; 同時押し（Corne用）
      [[:semicolon :hyphen]         [:open_bracket :close_bracket :!TOSreturn_or_enter :left_arrow]     [:corne :ja]]     ;; ;- → 角括弧 [] （日本語）
      [[:semicolon :hyphen]         [:open_bracket :close_bracket                      :left_arrow]     [:corne :!ja]]    ;; ;- → 角括弧 [] （日本語以外）
      [[:l :semicolon]              [:!Sopen_bracket :!Sclose_bracket :!TOSreturn_or_enter :left_arrow] [:corne :ja]]     ;; l; → 波括弧 {} （日本語）
      [[:l :semicolon]              [:!Sopen_bracket :!Sclose_bracket                      :left_arrow] [:corne :!ja]]    ;; l; → 波括弧 {} （日本語以外）
      [[:period :slash]             [:!S9 :!S0 :!TOSreturn_or_enter :left_arrow]                        [:corne :ja]]     ;; ./ → 丸括弧 () （日本語）
      [[:period :slash]             [:!S9 :!S0                      :left_arrow]                        [:corne :!ja]]    ;; ./ → 丸括弧 () （日本語以外）
      [[:slash :quote]              [:quote :quote :left_arrow]                                         [:corne]]         ;; /' → シングルクォート '' （言語非依存）
      [[:p :equal_sign]             [:!Squote :!Squote :left_arrow]                                     [:corne]]         ;; p= → ダブルクォート "" （言語非依存）
      [[:grave_accent_and_tilde :a] [:grave_accent_and_tilde :grave_accent_and_tilde :left_arrow]       [:corne]]         ;; `a → バッククォート `` （言語非依存）
    ]}

    {:des "通常のリターンを変換確定キーとして扱う"
     :rules [
      ;; ⇧リターンは日本語の確定動作（かわせみで定義必要：「変換と確定」→「全文節確定」、「候補操作」→「候補決定」）＋改行（アプリに依る）
      [:return_or_enter   :!Sreturn_or_enter :no_return_apps] ;; リターン単打を⇧リターンに置き換え、変換確定しかしない
      [:!!return_or_enter :return_or_enter]                   ;; ✦リターンで通常のリターン
    ]}
  ]
}